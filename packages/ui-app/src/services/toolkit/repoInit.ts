import { FileBridgeClient } from '@docs-as-code/file-bridge-client';
import { dbg } from '../exec.js';

export async function ensureToolkitRepoInitialized(client: FileBridgeClient): Promise<void> {
  const base = `project_templates`;
  try { await client.mkdirp(base); } catch {}
  try { await client.mkdirp(`${base}/ui-state`); } catch {}
  try { await client.mkdirp('modules'); } catch {}
  try {
    const existing = await client.read('cdf.toml');
    if (!existing || existing.trim().length === 0) {
      const minimal = `# Generated by UI wizard\n\n[cdf]\ndefault_organization_dir = ""\ndefault_env = "dev"\n\n[modules]\n# This is the version of the modules. It should not be changed manually.\n# It will be updated by the 'cdf modules upgrade' command.\nversion = "0.6.6"\n\n[plugins]\nrun = true\npull = true\ndump = true\n`;
      try { await client.write('cdf.toml', minimal); dbg('[cdf.toml] wrote minimal baseline with modules.version=0.6.6'); } catch {}
    }
    try {
      let toml = await client.read('cdf.toml');
      let changed = false;
      if (!/\[cdf\]/.test(toml)) { toml = `\n[cdf]\ndefault_organization_dir = ""\ndefault_env = "dev"\n\n` + toml; changed = true; }
      else if (!/\[cdf\][\s\S]*?\bdefault_env\b/.test(toml)) { toml = toml.replace(/(\[cdf\][\s\S]*?)(\n\[|$)/m, (_m, a, b) => `${a}\ndefault_env = "dev"${b}`); changed = true; }
      if (!/\[modules\]/.test(toml)) { toml += `\n[modules]\nversion = "0.6.6"\n`; changed = true; }
      else if (!/\[modules\][\s\S]*?\bversion\b/.test(toml)) { toml = toml.replace(/(\[modules\])/, `$1\nversion = "0.6.6"`); changed = true; }
      if (!/\[plugins\]/.test(toml)) { toml += `\n[plugins]\nrun = true\npull = true\ndump = true\n`; changed = true; }
      if (changed) { await client.write('cdf.toml', toml); dbg('[cdf.toml] patched to ensure required keys present'); }
    } catch {}
  } catch {
    const minimal = `# Generated by UI wizard\n\n[cdf]\ndefault_organization_dir = ""\ndefault_env = "dev"\n\n[modules]\n# This is the version of the modules. It should not be changed manually.\n# It will be updated by the 'cdf modules upgrade' command.\nversion = "0.6.6"\n\n[plugins]\nrun = true\npull = true\ndump = true\n`;
    try { await client.write('cdf.toml', minimal); dbg('[cdf.toml] wrote minimal baseline after read failure'); } catch {}
  }
}


