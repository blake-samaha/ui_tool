import type { WizardStep } from '../../components/wizard/types.js';

export const tierXXSteps: WizardStep[] = [
  { id: 'basics', title: 'Basics', uiSchema: { fields: [ { kind: 'number', id: 'schemaVersion', label: 'Schema Version', placeholder: '1' }, { kind: 'text', id: 'moduleId', label: 'Module ID', placeholder: 'e.g., well_performance', help: 'Snake_case module identifier.' }, { kind: 'text', id: 'objectId', label: 'Object ID', placeholder: 'e.g., workOrder', help: 'LowerCamelCase object identifier.' } ] }, validate: (d: any) => (!d?.moduleId || !d?.objectId ? { ok: false, message: 'moduleId and objectId are required' } : { ok: true }) },
  { id: 'description', title: 'Description', uiSchema: { fields: [ { kind: 'group', path: 'description', fields: [ { kind: 'text', id: 'summary', label: 'Summary' }, { kind: 'text', id: 'externalId', label: 'External ID' } ] } ] } },
  { id: 'identifiers', title: 'Identifiers', uiSchema: { fields: [ { kind: 'group', path: 'identifiers', fields: [ { kind: 'text', id: 'viewExternalId', label: 'View External ID' }, { kind: 'text', id: 'containerExternalId', label: 'Container External ID' } ] } ] } },
  { id: 'data-source', title: 'Data Source', uiSchema: { fields: [ { kind: 'group', path: 'dataSource', fields: [ { kind: 'text', id: 'sourceSystem', label: 'Source System', placeholder: 'e.g., SAP S/4HANA' }, { kind: 'text', id: 'space', label: 'Space', placeholder: 'e.g., sp_my_project_space' }, { kind: 'text', id: 'primaryRawTable', label: 'Primary RAW Table', placeholder: 'e.g., sap_zpm_workorders' } ] } ] } },
  { id: 'properties', title: 'Properties', uiSchema: { fields: [ { kind: 'array', path: 'properties', label: 'Properties', addLabel: 'Add', removeLabel: 'Remove', render: 'table', pageSize: 25, columns: ['name', 'dataType', 'nullable', 'sourceField', 'description'], item: { kind: 'group', fields: [ { kind: 'text', id: 'name', label: 'Name', placeholder: 'e.g., workOrderNumber' }, { kind: 'select', id: 'dataType', label: 'Data Type', options: [ { value: '', label: '' }, { value: 'text', label: 'text' }, { value: 'int32', label: 'int32' }, { value: 'int64', label: 'int64' }, { value: 'float32', label: 'float32' }, { value: 'float64', label: 'float64' }, { value: 'boolean', label: 'boolean' }, { value: 'timestamp', label: 'timestamp' }, { value: 'date', label: 'date' }, { value: 'json', label: 'json' }, { value: 'geojson', label: 'geojson' } ] }, { kind: 'checkbox', id: 'nullable', label: 'Nullable' }, { kind: 'text', id: 'sourceField', label: 'Source Field', placeholder: 'e.g., AUFNR' }, { kind: 'text', id: 'description', label: 'Description', placeholder: 'What this property represents' } ] } } ] } },
  { id: 'container-spec', title: 'Container Spec', uiSchema: { fields: [ { kind: 'group', path: 'containerSpecification', fields: [ { kind: 'text', id: 'primaryKey', label: 'Primary Key' }, { kind: 'arrayOfStrings', path: 'required', label: 'Required', addLabel: 'Add', removeLabel: 'Remove' }, { kind: 'arrayOfStrings', path: 'unique', label: 'Unique', addLabel: 'Add', removeLabel: 'Remove' }, { kind: 'array', path: 'indexes', label: 'Indexes', addLabel: 'Add', removeLabel: 'Remove', item: { kind: 'group', fields: [ { kind: 'text', id: 'name', label: 'Name' }, { kind: 'arrayOfStrings', path: 'fields', label: 'Fields', addLabel: 'Add', removeLabel: 'Remove' } ] } } ] } ] } },
  { id: 'relationships', title: 'Relationships', uiSchema: { fields: [ { kind: 'array', path: 'relationships', label: 'Relationships', addLabel: 'Add', removeLabel: 'Remove', item: { kind: 'group', fields: [ { kind: 'text', id: 'name', label: 'Name', placeholder: 'relationship name' }, { kind: 'select', id: 'type', label: 'Type', options: [ { value: 'direct', label: 'direct' }, { value: 'edge', label: 'edge' } ] }, { kind: 'text', id: 'sourceField', label: 'Source Field' }, { kind: 'text', id: 'targetType', label: 'Target Type' }, { kind: 'select', id: 'multiplicity', label: 'Multiplicity', options: [ { value: '1:1', label: '1:1' }, { value: '1:N', label: '1:N' }, { value: 'N:M', label: 'N:M' } ] }, { kind: 'text', id: 'label', label: 'Label', placeholder: 'e.g., performedOn' }, { kind: 'text', id: 'resolution', label: 'Resolution', placeholder: 'e.g., join via externalId' }, { kind: 'text', id: 'edgeSpace', label: 'Edge Space', placeholder: 'e.g., cdf_cdm', help: 'Required when type=edge.' }, { kind: 'text', id: 'edgeTypeExternalId', label: 'Edge Type External ID', placeholder: 'e.g., CogniteAssetRelationship', help: 'Required when type=edge.' } ] } } ] } },
  { id: 'view-config', title: 'View Configuration', uiSchema: { fields: [ { kind: 'group', path: 'viewConfiguration', fields: [ { kind: 'arrayOfStrings', path: 'implements', label: 'Implements', addLabel: 'Add', removeLabel: 'Remove' }, { kind: 'arrayOfStrings', path: 'requires', label: 'Requires', addLabel: 'Add', removeLabel: 'Remove' } ] } ] } },
  { id: 'time-series', title: 'Time Series', uiSchema: { fields: [ { kind: 'array', path: 'timeSeries', label: 'Time Series', addLabel: 'Add', removeLabel: 'Remove', item: { kind: 'group', fields: [ { kind: 'text', id: 'name', label: 'Name' }, { kind: 'text', id: 'sourceExternalIdPattern', label: 'Source External ID Pattern' }, { kind: 'text', id: 'description', label: 'Description' } ] } } ] } },
  { id: 'transformation', title: 'Transformation Plan', uiSchema: { fields: [ { kind: 'group', path: 'transformationPlan', fields: [ { kind: 'text', id: 'externalId', label: 'External ID' }, { kind: 'select', id: 'engine', label: 'Engine', options: [ { value: 'sql', label: 'sql' }, { value: 'function', label: 'function' } ] }, { kind: 'group', path: 'source', fields: [ { kind: 'text', id: 'database', label: 'RAW Database' }, { kind: 'text', id: 'table', label: 'RAW Table' } ] }, { kind: 'group', path: 'target', fields: [ { kind: 'text', id: 'containerExternalId', label: 'Container External ID' }, { kind: 'arrayOfStrings', path: 'upsertKeys', label: 'Upsert Keys', addLabel: 'Add', removeLabel: 'Remove' }, { kind: 'select', id: 'scdType', label: 'SCD Type', options: [ { value: 'SCD1', label: 'SCD1' }, { value: 'SCD2', label: 'SCD2' } ] } ] }, { kind: 'group', path: 'schedule', fields: [ { kind: 'text', id: 'cron', label: 'Cron' }, { kind: 'text', id: 'timezone', label: 'Timezone' } ] }, { kind: 'checkbox', id: 'idempotent', label: 'Idempotent' }, { kind: 'group', path: 'backfill', fields: [ { kind: 'select', id: 'strategy', label: 'Strategy', options: [ { value: 'full', label: 'full' }, { value: 'date_range', label: 'date_range' } ] }, { kind: 'text', id: 'from', label: 'From' } ] } ] } ] } },
  { id: 'data-quality', title: 'Data Quality', uiSchema: { fields: [ { kind: 'group', path: 'dataQuality', fields: [ { kind: 'array', path: 'rules', label: 'Rules', addLabel: 'Add', removeLabel: 'Remove', item: { kind: 'group', fields: [ { kind: 'text', id: 'name', label: 'Name' }, { kind: 'select', id: 'type', label: 'Type', options: [ { value: 'not_null', label: 'not_null' }, { value: 'range', label: 'range' }, { value: 'regex', label: 'regex' }, { value: 'unique', label: 'unique' } ] }, { kind: 'text', id: 'field', label: 'Field' }, { kind: 'select', id: 'severity', label: 'Severity', options: [ { value: 'info', label: 'info' }, { value: 'warn', label: 'warn' }, { value: 'error', label: 'error' } ] }, { kind: 'text', id: 'min', label: 'Min' }, { kind: 'text', id: 'max', label: 'Max' }, { kind: 'text', id: 'pattern', label: 'Pattern' } ] } } ] } ] } },
  { id: 'observability', title: 'Observability & Orchestration', uiSchema: { fields: [ { kind: 'group', path: 'observability', fields: [ { kind: 'text', id: 'owner', label: 'Owner' }, { kind: 'group', path: 'sla', fields: [ { kind: 'number', id: 'freshnessMinutes', label: 'Freshness Minutes' }, { kind: 'number', id: 'maxErrorRatePct', label: 'Max Error Rate %' } ] } ] }, { kind: 'group', path: 'orchestration', fields: [ { kind: 'text', id: 'playbookExternalId', label: 'Playbook External ID' }, { kind: 'array', path: 'tasks', label: 'Tasks', addLabel: 'Add', removeLabel: 'Remove', item: { kind: 'group', fields: [ { kind: 'select', id: 'type', label: 'Type', options: [ { value: 'transformation', label: 'transformation' }, { value: 'contextualization', label: 'contextualization' } ] }, { kind: 'text', id: 'ref', label: 'Ref' } ] } } ] } ] } }
];


